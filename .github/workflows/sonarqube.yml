name: sonarqube

on:
   pull_request:
    branches:
      - main
    types: [opened, synchronize]
    
jobs:
  # Job의 이름 설정, 빌드 수행
  build:
    # ubuntu 환경에서 실행, 환경은 GitHub 이 제공
    runs-on: ubuntu-latest
    # build job 의 세부 단계 설정
    steps:
      # 소스코드 체크아웃 수행
      - name: Checkout source code
        uses: actions/checkout@v3
        
        # Job의 이름 설정, Scanner 발동
  analysis:
    # ubuntu 환경에서 실행, 환경은 GitHub 이 제공
    runs-on: ubuntu-latest
    # 현재 Job에서 사용할 환경변수, repository setting secrets 에서 설정한 환경변수 사용
    env:
      SONARQUBE_PROJECT_KEY: jpa-self-study
      SONARQUBE_TOKEN : ${{ secrets.SONARQUBE_TOKEN }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      
    steps:
			# 소스코드 체크아웃 수행
      - name: Checkout source code
        uses: actions/checkout@v2
        
      # gradlw 파일 권한 변경
      - name: gradlew permission change
        run: sudo chmod 755 gradlew

      # Gralde 의 Scanner 발동, 위의 env 에서 선언한 환경변수와 함께 발동
      - name: Sonaqube Analysis        
        run: ./gradlew test sonarqube
             -Dsonar.projectKey=${{ env.SONARQUBE_PROJECT_KEY }}
             -Dsonar.projectName=${{ env.SONARQUBE_PROJECT_KEY }}-${{ env.PR_NUMBER }}
             -Dsonar.login=${{ env.SONARQUBE_TOKEN }}
			# PR 에 Comment 를 달아주는 스크립트 실행
      - name: Comment Sonarqube URL
        uses: actions/github-script@v4
        with:
          script: |
            const { SONARQUBE_PROJECT_KEY, SONARQUBE_URL, PR_NUMBER } = process.env
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📊 ${ SONARQUBE_PROJECT_KEY }-${ PR_NUMBER } 분석 결과 확인하기 [링크](http://13.209.22.17:8081/)`
            })
